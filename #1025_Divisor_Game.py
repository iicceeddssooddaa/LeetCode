class Solution(object):
    def divisorGame(self, n):
        """
        :type n: int
        :rtype: bool
        """
        return n%2 == 0
      # 要啥dp，要啥自行车
"""
定义：对于一个正整数，如果保证先手必胜（存在策略，使得无论对手如何选择，都无法取胜），则称其为“必胜点”；如果后手保证必胜（无论先手作何选择，都无法取胜），则称其为“必输点”。
        例如，1为必输点，因为先手没有可取；2为必胜点，因为先手取1（也只能取1）。

命题：正偶数全部为必胜点（先手必胜），正奇数全部为必输点（后手必胜）。

引理1：若n一步可达的结果里 存在 必输点，则n为必胜点。
    简证：先手选择该策略，取走d'，从而n - d'对于立刻行权的选手是必输的，此时轮到对方，因而对方必输。
引理2：若n一步可达的所有结果 都是 必胜点，则n为必输点。
    简证：遍历全部选择，都会导致对方取胜。
引理3：任何数要么必胜，要么必输。
    简证：由引理1和引理2，对于n，如果一步后的结果都是必胜点，则必输，反之则必然存在至少一个必输点，因而可以必胜。
    
证明：使用归纳法。
    （归纳命题1：任何正奇数2p+1都是必输点。
        归纳命题2：任何正偶数2q都是必胜点。）
    
    归纳前提：1显然必输，2显然必胜。
    归纳假设：对于任何正整数k，不大于k的正奇数都是必输点，且不大于k的偶数都是必胜点。
    
    对于偶数 k + 1 = 2q，1为其真因子，2q-1符合归纳假设（正奇数，小于k + 1），因而由引理1，必胜。
    对于奇数 k + 1 = 2p + 1，考虑全部k + 1的真因子，必然都是奇数（2不整除k + 1），从而任何 d|（k + 1）， k + 1 - d 都是偶数。由引理2，必输。
    
    从而对正整数k+1，归纳假设同样成立。从而对任意正整数原命题成立。
    
    证毕。
"""
